Promise中的异步编程是从jQuery中的deferred中演变过来的
 常见的异步操作：定时器，事件，ajax等，node中文件的读取，事件等。有一步操作就少不了回调机制
 异步编程的问题：
    产生回调地狱 难于维护和扩展
    try catch只能捕获同步代码中出现的异常,异步执行的捕获不到
    同步并发的异步存在一定的问题

es6 Promise可以解决回调地狱，以及同步并发的异步问题(异步操作)
但是依旧会有明显的回调痕迹，es6中的generator，es7的async await会让异步代码看起来和同步一样，写起来更加优雅

回调本质：当做某个条件满足一定条件之后，再做另外一件事 
Jquery:
    callbacks可管理回调
loadsh：JavaScript实用工具库，提供各种方法提升开发效率，提供after高阶函数辅助回调操作

高阶函数：函数参数中有函数，函数返回值是函数

Promise 原理
发布订阅模式
